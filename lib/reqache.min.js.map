{"version":3,"sources":["webpack://Reqache/webpack/universalModuleDefinition","webpack://Reqache/webpack/bootstrap","webpack://Reqache/./src/index.js","webpack://Reqache/./src/Reqache.js","webpack://Reqache/./node_modules/whatwg-fetch/fetch.js","webpack://Reqache/./node_modules/jsonify/index.js","webpack://Reqache/./node_modules/jsonify/lib/parse.js","webpack://Reqache/./node_modules/jsonify/lib/stringify.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","fetch","require","_whatwgFetch","_jsonify","setFetchResponseType","fetchInstance","type","then","response","ok","Error","statusText","url","options","arguments","length","undefined","_options$env","env","_options$responseType","responseType","cache","localStorage","getItem","Promise","resolve","Json","parse","result","setItem","stringify","__webpack_exports__","Headers","Request","Response","DOMException","support","searchParams","self","iterable","blob","Blob","e","formData","arrayBuffer","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","toString","normalizeName","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","headers","this","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","text","readAsText","chars","fromCharCode","join","readArrayBufferAsText","decode","json","JSON","oldValue","has","callback","thisArg","keys","push","values","entries","methods","input","method","upcased","credentials","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","bodyInit","status","clone","redirectStatuses","redirect","RangeError","location","err","message","stack","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","at","ch","escapee","\"","\\","/","b","f","charAt","number","string","isFinite","hex","uffff","parseInt","white","array","word","source","reviver","walk","holder","k","v","","gap","indent","rep","escapable","meta","\b","\t","\n","\f","\r","quote","lastIndex","a","charCodeAt","replacer","space","str","partial","mind","toJSON","apply"],"mappings":"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","file":"reqache.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Reqache\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Reqache\"] = factory();\n\telse\n\t\troot[\"Reqache\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const fetch = require('./Reqache.js');\n\nmodule.exports.fetch = fetch;\n","import {fetch as fetchPolly} from 'whatwg-fetch';\nimport Json from 'jsonify';\n\nfunction setFetchResponseType(fetchInstance, type) {\n  return fetchInstance.then(response => {\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response[type]();\n  });\n}\n\nfunction fetch(url, options = {}) {\n  const {env = 'dev', responseType = 'json'} = options;\n  const cache = localStorage;\n\n  if (env === 'prod') {\n    return setFetchResponseType(fetchPolly(url, options), responseType);\n  }\n\n  if (!cache.getItem(url)) {\n    return setFetchResponseType(fetchPolly(url, options), responseType).then(\n      result => {\n        cache.setItem(url, Json.stringify(result));\n\n        return Promise.resolve(result);\n      }\n    );\n  }\n\n  return Promise.resolve(Json.parse(cache.getItem(url)));\n}\n\nmodule.exports = fetch;\n","var support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      resolve(new Response(body, options))\n    }\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    xhr.open(request.method, request.url, true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob'\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n","exports.parse = require('./lib/parse');\nexports.stringify = require('./lib/stringify');\n","var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n","var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    gap,\n    indent,\n    meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    },\n    rep;\n\nfunction quote(string) {\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n    \n    escapable.lastIndex = 0;\n    return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string' ? c :\n            '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    }) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n    // Produce a string from holder[key].\n    var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key];\n    \n    // If the value has a toJSON method, call it to obtain a replacement value.\n    if (value && typeof value === 'object' &&\n            typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n    }\n    \n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n    if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n    }\n    \n    // What happens next depends on the value's type.\n    switch (typeof value) {\n        case 'string':\n            return quote(value);\n        \n        case 'number':\n            // JSON numbers must be finite. Encode non-finite numbers as null.\n            return isFinite(value) ? String(value) : 'null';\n        \n        case 'boolean':\n        case 'null':\n            // If the value is a boolean or null, convert it to a string. Note:\n            // typeof null does not produce 'null'. The case is included here in\n            // the remote chance that this gets fixed someday.\n            return String(value);\n            \n        case 'object':\n            if (!value) return 'null';\n            gap += indent;\n            partial = [];\n            \n            // Array.isArray\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n                \n                // Join all of the elements together, separated with commas, and\n                // wrap them in brackets.\n                v = partial.length === 0 ? '[]' : gap ?\n                    '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n                    '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            \n            // If the replacer is an array, use it to select the members to be\n            // stringified.\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            else {\n                // Otherwise, iterate through all of the keys in the object.\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            \n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0 ? '{}' : gap ?\n            '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n            '{' + partial.join(',') + '}';\n        gap = mind;\n        return v;\n    }\n}\n\nmodule.exports = function (value, replacer, space) {\n    var i;\n    gap = '';\n    indent = '';\n    \n    // If the space parameter is a number, make an indent string containing that\n    // many spaces.\n    if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n            indent += ' ';\n        }\n    }\n    // If the space parameter is a string, it will be used as the indent string.\n    else if (typeof space === 'string') {\n        indent = space;\n    }\n\n    // If there is a replacer, it must be a function or an array.\n    // Otherwise, throw an error.\n    rep = replacer;\n    if (replacer && typeof replacer !== 'function'\n    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n    }\n    \n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return str('', {'': value});\n};\n"],"sourceRoot":""}